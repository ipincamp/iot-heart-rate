services:
  api:
    build: ./api
    container_name: iot_express_api
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev
    depends_on:
      - db
    networks:
      - iot-network

  webhook:
    build:
      context: .
      dockerfile: webhook.Dockerfile
    container_name: iot_webhook_listener
    ports:
      - "3002:3002"
    volumes:
      - .:/usr/src/app
    networks:
      - iot-network

  db:
    image: postgres:17.2
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - iot-network

  adminer:
    image: adminer
    container_name: adminer_ui
    ports:
      - "3001:8080"
    depends_on:
      - db
    networks:
      - iot-network

volumes:
  pgdata:


networks:
  iot-network:
    driver: bridge
